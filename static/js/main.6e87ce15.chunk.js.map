{"version":3,"sources":["logo.svg","components/cardsContainer/CardProduct.js","components/commons/CardsFilter.js","components/cardsContainer/cardsWrapper.js","components/home/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardProduct","props","className","style","backgroundImage","photo","height","backgroundSize","alt","name","category","price","href","CardsFilter","htmlFor","id","onChange","onFilterChange","value","categories","map","key","CardsWrapper","useState","products","setProducts","allCategories","reduce","product","Set","uniqueCategories","categorySelected","document","querySelector","orderBy","filter","prod","sort","a","b","handleCategoryChange","HomePage","store","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"k7DAAAA,EAAOC,QAAU,IAA0B,kC,mIC6B5BC,EA3BK,SAAAC,GACnB,OACC,yBAAKC,UAAU,eACd,wBAAIA,UAAU,gBACd,uBAAGA,UAAU,iBACb,yBAAKA,UAAU,QACd,yBACCC,MAAO,CACNC,gBAAgB,OAAD,OAASH,EAAMI,MAAf,KACfC,OAAQ,QACRC,eAAgB,SAEjBL,UAAU,eACVM,IAAI,sBAEL,yBAAKN,UAAU,aACd,wBAAIA,UAAU,cAAcD,EAAMQ,MAClC,wBAAIP,UAAU,gBAAgBD,EAAMS,UACpC,uBAAGR,UAAU,aAAaD,EAAMU,MAAhC,UACA,uBAAGC,KAAK,IAAIV,UAAU,mBAAtB,eC6BUW,EAhDK,SAAAZ,GACnB,OACC,yBAAKC,UAAU,eACd,yBAAKA,UAAU,oBACd,yBAAKA,UAAU,uBACd,2BACCA,UAAU,mBACVY,QAAQ,uBAFT,eAOD,4BACCZ,UAAU,gBACVa,GAAG,sBACHC,SAAUf,EAAMgB,gBAEhB,4BAAQC,MAAM,IAAd,uBACCjB,EAAMkB,WAAWC,KAAI,SAAAV,GAAQ,OAC7B,4BAAQW,IAAKX,EAAUQ,MAAOR,GAC5BA,QAKL,yBAAKR,UAAU,oBACd,yBAAKA,UAAU,uBACd,2BACCA,UAAU,mBACVY,QAAQ,qBAFT,YAOD,4BACCZ,UAAU,gBACVa,GAAG,oBACHC,SAAUf,EAAMgB,gBAEhB,4BAAQC,MAAM,IAAd,sBACA,4BAAQA,MAAM,OAAd,qBACA,4BAAQA,MAAM,QAAd,yBCwCUI,EA/EM,SAAArB,GAAU,IAAD,EACGsB,mBAAStB,EAAMuB,UADlB,mBACtBA,EADsB,KACZC,EADY,KAwD7B,OACC,oCACC,kBAAC,EAAD,CACCN,WAxDsB,WACxB,IAAMO,EAAgBzB,EAAMuB,SAASG,QAAO,SAACR,EAAYS,GACxD,MAAM,GAAN,mBAAWT,GAAX,CAAuBS,EAAQlB,aAC7B,IACH,OAAO,YAAI,IAAImB,IAAIH,IAoDLI,GACZb,eAAgB,kBAlDU,SAAAO,GAC5B,IAAMO,EAAmBC,SAASC,cAAc,wBAC9Cf,MACIgB,EAAUF,SAASC,cAAc,sBAAsBf,MAQ7D,OANIa,IACHP,EAAWA,EAASW,QACnB,SAAAC,GAAI,OAAIA,EAAK1B,WAAaqB,MAIpBG,GACP,IAAK,MACJV,EAAWA,EAASa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3B,MAAQ4B,EAAE5B,SAC/C,MAED,IAAK,OACJa,EAAWA,EAASa,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE5B,MAAQ2B,EAAE3B,SAOjDc,GAAY,8BAAUD,MA0BEgB,CAAqBvC,EAAMuB,aAElD,yBAAKtB,UAAU,yBACbsB,EAASJ,KAAI,SAAAQ,GACb,OACC,kBAAC,EAAD,CACCnB,KAAMmB,EAAQnB,KACdE,MAAOiB,EAAQjB,MACfN,MAAOuB,EAAQvB,MACfK,SAAUkB,EAAQlB,SAClBW,IAAKO,EAAQnB,a,OC7DLgC,EATE,WAChB,OACC,oCACC,oDACA,kBAAC,EAAD,CAAcjB,SAAUkB,EAAMlB,aCElBmB,MAJf,WACC,OAAO,kBAAC,EAAD,OCKYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlB,SAASmB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6e87ce15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from \"react\";\r\n\r\nconst CardProduct = props => {\r\n\treturn (\r\n\t\t<div className=\"productCard\">\r\n\t\t\t<h3 className=\"productName\"></h3>\r\n\t\t\t<p className=\"productPrice\"></p>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(${props.photo})`,\r\n\t\t\t\t\t\theight: \"100px\",\r\n\t\t\t\t\t\tbackgroundSize: \"cover\"\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName=\"card-img-top\"\r\n\t\t\t\t\talt=\"Foto del rellotge\"\r\n\t\t\t\t></div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h5 className=\"card-title\">{props.name}</h5>\r\n\t\t\t\t\t<h3 className=\"h5 text-info\">{props.category}</h3>\r\n\t\t\t\t\t<p className=\"card-text\">{props.price}€</p>\r\n\t\t\t\t\t<a href=\"#\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\tComprar\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default CardProduct;\r\n","import React from \"react\";\r\n\r\nconst CardsFilter = props => {\r\n\treturn (\r\n\t\t<div className=\"cardsFilter\">\r\n\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tclassName=\"input-group-text\"\r\n\t\t\t\t\t\thtmlFor=\"selectCardsCategory\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCategories\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\tid=\"selectCardsCategory\"\r\n\t\t\t\t\tonChange={props.onFilterChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"\">filtra per tipus...</option>\r\n\t\t\t\t\t{props.categories.map(category => (\r\n\t\t\t\t\t\t<option key={category} value={category}>\r\n\t\t\t\t\t\t\t{category}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tclassName=\"input-group-text\"\r\n\t\t\t\t\t\thtmlFor=\"orderCardsByPrice\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tOptions\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<select\r\n\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\tid=\"orderCardsByPrice\"\r\n\t\t\t\t\tonChange={props.onFilterChange}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"\">Ordena per preu...</option>\r\n\t\t\t\t\t<option value=\"asc\">de menys a més</option>\r\n\t\t\t\t\t<option value=\"desc\">de més a menys</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardsFilter;\r\n","import React, { useState } from \"react\";\r\nimport CardProduct from \"./CardProduct\";\r\nimport CardsFilter from \"../commons/CardsFilter\";\r\n\r\nconst CardsWrapper = props => {\r\n\tconst [products, setProducts] = useState(props.products);\r\n\r\n\tconst uniqueCategories = () => {\r\n\t\tconst allCategories = props.products.reduce((categories, product) => {\r\n\t\t\treturn [...categories, product.category];\r\n\t\t}, []);\r\n\t\treturn [...new Set(allCategories)];\r\n\t};\r\n\r\n\tconst handleCategoryChange = products => {\r\n\t\tconst categorySelected = document.querySelector(\"#selectCardsCategory\")\r\n\t\t\t.value;\r\n\t\tconst orderBy = document.querySelector(\"#orderCardsByPrice\").value;\r\n\r\n\t\tif (categorySelected) {\r\n\t\t\tproducts = products.filter(\r\n\t\t\t\tprod => prod.category === categorySelected\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tswitch (orderBy) {\r\n\t\t\tcase \"asc\":\r\n\t\t\t\tproducts = products.sort((a, b) => a.price - b.price);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"desc\":\r\n\t\t\t\tproducts = products.sort((a, b) => b.price - a.price);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tsetProducts(() => [...products]);\r\n\t};\r\n\r\n\tconst handleOrderByChange = products => {\r\n\t\tconst orderBy = document.querySelector(\"#orderCardsByPrice\").value;\r\n\t\t/* switch (orderBy) {\r\n\t\t\tcase \"asc\":\r\n\t\t\t\tsetProducts(() =>\r\n\t\t\t\t\t[...products].sort((a, b) => a.price - b.price)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"desc\":\r\n\t\t\t\tsetProducts(() =>\r\n\t\t\t\t\t[...products].sort((a, b) => b.price - a.price)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetProducts(() => [...products]);\r\n\t\t\t\tbreak;\r\n\t\t} */\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CardsFilter\r\n\t\t\t\tcategories={uniqueCategories()}\r\n\t\t\t\tonFilterChange={() => handleCategoryChange(props.products)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"productCardsContainer\">\r\n\t\t\t\t{products.map(product => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CardProduct\r\n\t\t\t\t\t\t\tname={product.name}\r\n\t\t\t\t\t\t\tprice={product.price}\r\n\t\t\t\t\t\t\tphoto={product.photo}\r\n\t\t\t\t\t\t\tcategory={product.category}\r\n\t\t\t\t\t\t\tkey={product.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default CardsWrapper;\r\n","import React from \"react\";\r\nimport CardsWrapper from \"../cardsContainer/cardsWrapper\";\r\nimport store from \"../../api/store.json\";\r\n\r\nconst HomePage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Populetic E-commerce</h1>\r\n\t\t\t<CardsWrapper products={store.products} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./ecomerce.css\";\nimport HomePage from \"./components/home/HomePage\";\n\nfunction App() {\n\treturn <HomePage />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}